<script>
	
	//SOCKET Open
	var socket = io();
	var project_room0 = <%=project_list_no%>;
	var project_room2 = <%=project_list_no%> + '/' + '<%=chat%>';
	
	socket.connect(project_room0);
	socket.emit("join0", project_room0);
	
	<% include ../include/categoryScript.ejs %>
	<!-- /#page-wrapper -->
	//유저스토리 디테일 
	function releaseStoryLi() {
		$('.DetailPoker').on('click', function(e){
			var push = $(this).attr('value');
			socket.emit('StoryDetail', {
				user_story_no : push
			});
		});
	};
	/** 마스터용 스토리 뿌리기 */
	function releaseStoryLiMaster() {
		$('.DetailPokerMaster').on('click', function(e){
			var push = $(this).attr('value');
			//UserStory 호출
			socket.emit('StoryDetail', {
				user_story_no : push
			});
			
			//join_list 정보 호출
			socket.emit('Join_List', {
				project_join_no : <%=project_join_no%>,
				user_story_no : push
			});
			
		});
	};
			
	//유저스토리 불러서 넣기
	var cateNo;
	socket.on('StoryDetail', function (data){
		var da = data.data[0];
		var textfield = $('.PokerStoryContent');
		$('.PokerStory').val(da.user_story_no);
		var text = '';
		text += 'UserStory 제목    : '+da.title + "\n";
		text += 'UserStory 사용자 : '+da.as_a + "\n";
		text += 'UserStory 기능    : '+da.i_want + "\n";
		text += 'UserStory 목적    : '+da.so_that + "\n";
		textfield.html(text);
	});
	//포커 정보 부르기
	
	//포커 관련 모든 인원수 및 점수 부르기
	socket.on('Join_List', function (data){
		var count = data.count[0].count;
		var vote = data.vote[0].Vote;
		var score = data.score;
		var List ='';
		var point0 = 0;
		var point1 = 0;
		var point2 = 0;
		var point5 = 0;
		var point10 = 0;
		var etc = 0;
		count = --count;
		
		List += vote;
		List += ' / ' + (count);
		
		$('.Poker_Join_List').val('');
		$('.Poker_Join_List').val(List);
		
		var ScoreAdd  = parseFloat('0');		
		if(score.length > 0){
			for(var i = 0; i < score.length; i++){
				if(score[i].score == 0.5){
					point0++;				
				} else if(score[i].score == 1){
					point1++;				
				} else if(score[i].score == 2){
					point2++;				
				} else if(score[i].score == 5){
					point5++;				
				} else if(score[i].score == 10){
					point10++;				
				} else {
					etc++;				
				}
				if(score[i].score > 0){
					ScoreAdd += score[i].score;
				}
			};
		};
		if(ScoreAdd > 0){
			ScoreAdd = (ScoreAdd / count);
		}
		
		$('.point0').val('');
		$('.point1').val('');
		$('.point2').val('');
		$('.point5').val('');
		$('.point10').val('');
		$('.ScoreAdd').val('');
		$('.point0').val(point0);
		$('.point1').val(point1);
		$('.point2').val(point2);
		$('.point5').val(point5);
		$('.point10').val(point10);
		$('.ScoreAdd').val(ScoreAdd);
		$('.VotePeople').val(vote);
		$('.AllPeople').val(count);
		
	});
	
	/*채팅창 팝업*/
	$(function() {
		$("#chatBtn").click(function() {
			popupOpen('<%=chat%>');            
    });
        
	function popupOpen(chatName) {
		var popupUrl = "http://52.78.100.100:3000/chats/" + chatName;
		var popUrl = popupUrl; //팝업창에 출력될 페이지 URL

		var cw = screen.availWidth; // 화면너비
		var ch = screen.availHeight; // 화면높이
		var sw = 1000; // 띄울 창 너비
		var sh = 500; // 띄울 창 높이
		var ml = (cw - sw) / 2;
		var mt = (ch - sh) / 2;

		var popOption = "width=" + sw + ", height=" + sh + ", top=" + mt
				+ ",left=" + ml + " resizable=no, scrollbars=no, status=no;"; //팝업창 옵션(optoin)

		window.open(popUrl, "", popOption);
	}
	});
		//스크롤 최상단으로 + 채팅
	$(function() {
        /* $(window).scroll(function() {
            if ($(this).scrollTop() > 500) {
                $('#chatBtn').fadeIn();
            } else {
                $('#chatBtn').fadeOut();
            }
        }); */
        $("#chatBtn").click(function() {
            $('html, body').animate({
                scrollTop : 0
            }, 400);
            return false;
        });
    });
	//logout
  $('.logoutBtn').on('click', function() {
	  swal({
		  title: '로그아웃 하시겠습니까?',
		  text: "",
		  type: 'warning',
		  showCancelButton: true,
		  confirmButtonColor: '#3085d6',
		  cancelButtonColor: '#d33',
		  confirmButtonText: 'YES',
		  cancelButtonText: 'NO'
		}).then(function () {
			location.href = 'http://52.78.100.100:80';
		})
	  
  });
	
	
	//여기까지가 기본 영역----------------------------
	//팀원용 모달 영역-----------------------------
	$('.DetailPoker').on('click', function (){
	});
		releaseStoryLi();
		releaseStoryLiMaster();
	
	//여기까지가 팀원용 모달 영역-----------------------
	//마스터용 모달 영역 -----------------------------------
	$('.DetailPokerMaster').on('click', function (){
		etcScore();
		SetScore();
	});
	function SetScore(){
	$('.SetScore').on('click', function (e){
		if($('.VotePeople').val() == $('.AllPeople').val()){
			socket.emit('StorySetScore', {
				user_story_no : $('.PokerStory').val(),
				working_time : $('.ScoreAdd').val(),
				project_release_no : <%=project_release_no%>,
				loginId : <%=loginId%>
			});
			$('.PokerStory').val('');
			$('.ScoreAdd').val('');
			$(planningPokerMasterModal).modal('hide');
			location.reload();
		} else {
			swal({     
				title: '투표가 진행중입니다.',
        type: 'warning',
        confirmButtonText: '닫기'
      })
		}	
	});
	}
	function etcScore(){
	$('.ScoreModal').on('click', function(e){
			var push = $('.PokerStory').val();
			//Poker 정보 호출
			socket.emit('PokerDetail', {
				user_story_no : push,
				project_list_no : <%=project_list_no%>
			});
		});
		//기타 점수 모달 영역---------
		socket.on('PokerDetail', function (data){
		var poker = data.poker;
		var user = data.user;
		var list = data.list;
		
		$('.ScoreHere').html('');
		var ScoreHere = $('.ScoreHere');
		var ScoreList = '';
		
		if(poker.length > 0){
			for(var i = 0; i < poker.length; i++){
				if(poker[i].score != '0.5' && poker[i].score != '1' && poker[i].score != '2' && poker[i].score != '5'
				&& poker[i].score != '10'){
				ScoreList +=	"<div class='col-xs-2 col-xs-offset-1'>"
        ScoreList +=  	"<input type='text' class='col-xs-12 text-center noPadding'"
        ScoreList +=    "style='background-color:transparent; border:none; width: 100%; font-weight: bold; font-size: 17px;'"
        ScoreList +=    "disabled value='유저명'>"
        ScoreList +=  "</div>"
        ScoreList +=  "<div class='col-xs-3'>"
        ScoreList +=  	"<input type='text' class='col-xs-12 text-center' id='Poker_User'"
        ScoreList +=    "style='background-color:transparent; border:none; width: 100%; font-weight: bold; font-size: 17px;'"
        ScoreList +=    "disabled value='"
        for(var j = 0; j < user.length; j++){
        	for(var k = 0; k < list.length; k++){
						if(poker[i].user_no == user[j].user_no){        
        		if(user[j].user_no == list[k].user_no){
        			ScoreList += list[k].name;
        		}
        		}
        	}
        }
        
        ScoreList +=		"'>"
        ScoreList +=  "</div>"
        ScoreList +=  "<div class='col-xs-2 col-xs-offset-1'>"
        ScoreList +=  	"<input type='text' class='col-xs-12 text-center noPadding'"
        ScoreList +=    "style='background-color:transparent; border:none; width: 100%; font-weight: bold; font-size: 17px;'"
        ScoreList +=    "disabled value='점수'>"
        ScoreList +=  "</div>"
        ScoreList +=  "<div class='col-xs-3'>"
        ScoreList +=  	"<input type='text' class='col-xs-12 text-center' id='Poker_Score'"
        ScoreList +=    "style='background-color:transparent; border:none; width: 100%; font-weight: bold; font-size: 17px;'"
        ScoreList +=    "disabled value='"+poker[i].score+"'>"
        ScoreList +=  "</div>"
				}
			};
		};
		
		$(ScoreList).appendTo(ScoreHere);
		
	});
	}
	//여기까지가 기타점수 모달 영역-------------------------
		
		//여기까지가 마스터용 모달 영역 -------------------------
		//팀원요 포커 영역-----------------
		var check = 0;
	//팀원용 포커
	$('.score').on('click', function (e){
		var text = $('.inputScore');
		var score = $(this).attr('value');
		text.val(score);
	});
		save();
	function save(){		
		$('.savePoker').on('click', function(e){
			var scoreSet = $('.inputScore').val();
			if(scoreSet.trim().length > 0){
				socket.emit('PokerFind', {
					user_story_no : $('.PokerStory').val(),
					user_no : $('.PokerUser').val()
				});
		
				socket.on('PokerFind', function (data){
					var da = data.FindPoker;
					console.log(da.length);
					if(da.length > 0){
						check = 0;
					} else {
						check = 1;
					};
				callFind();
				});
			} else {
				swal({     
					title: '점수를 입력해주세요.',
        	type: 'warning',
        	confirmButtonText: '닫기'
      	})
				$('.inputScore').val('');
				check = 0 ;
			}
		});	
	}
	function callFind(){	
		if(check == 1){
			socket.emit('PokerAdd', {
				user_story_no : $('.PokerStory').val(),
				user_no : $('.PokerUser').val(),
				score : $('.inputScore').val(),
				project_release_no : <%=project_release_no%>,
				loginId : <%=loginId%>
			});
		
			$('.PokerStory').val('');
			$('.PokerUser').val('');
			$('.inputScore').val('');
			$(planningPokerModal).modal('hide');
			check = 0;
			location.reload();
		} else {
				swal({     
					title: '이미 투표를 진행하였습니다.',
        	type: 'warning',
        	confirmButtonText: '닫기'
      	})
				$('.inputScore').val('');
				check = 0;
			}
	};
	//여기까지가 팀원 포커 모달 영역------------------------
</script>