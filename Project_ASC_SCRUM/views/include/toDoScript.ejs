		//투두 스크립트
			//불러 온다 Todo-
			function todoLi() {
				//var cookieName = '${cookie.name.value}';
				//cookieName = decodeURIComponent(cookieName);
				//var user = cookieName;
				if($('.maxSprint').val() > 0){
					var sprint_no = $('.maxSprint').val();
				} else {
					var sprint_no = $('.currentSprint').val();
				}
				
				var ToDo = $('.HereToToDo');
				var Doing = $('.HereToDoing');
				var Done = $('.HereToDone');
				ToDo.html('');
				Doing.html('');
				Done.html('');
				socket.emit('ToDoList', {
					sprint_no
				});
			};
			
			//불러서 넣는다 todo
			socket.on('ToDoList', function (data){
				var ToDo = $('.HereToToDo');
				var Doing = $('.HereToDoing');
				var Done = $('.HereToDone');
				ToDo.html('');
				Doing.html('');
				Done.html('');
				
				var todoLine = '';
				var doingLine = '';
				var doneLine = '';
				//전체 조회 후 받은 데이터
				var da = data.data;
				
				if(da.length > 0){
					for(var i = 0; i < da.length; i++){
						if(da[i].status == 0){
							todoLine += "<div class='panel panel-gray ToDoCard' id='"+da[i].sprint_back_log_no+"' draggable='true' ondragstart='drag(event)'>"
        			todoLine +=	  "<div class='panel-heading ToDoCard' >"
          		todoLine +=			"<div class='row'>"
            	todoLine +=				"<div class='col-xs-6 text-left'>"
            	todoLine +=  				"<div class='content'>"
            	todoLine +=   				"<a class='fa fa-pencil ModifyDo' data-toggle='modal' data-target='#modifyTodoModal' value='"+da[i].sprint_back_log_no+"'></a>"
            	todoLine +=  				"</div> </div>"
            	todoLine +=					"<div class='col-xs-6 text-right'>"
            	todoLine +=  					"<div class='content'>"
            	todoLine +=    					"<a class='fa fa-trash-o delDo' value='"+da[i].sprint_back_log_no+"'></a>"
            	todoLine +=  					"</div> </div>"
            	todoLine +=					"<div class='col-xs-10 col-xs-offset-1 text-center'>"
            	todoLine +=  			"<div class='content'><a class='detailDo' data-toggle='modal' data-target='#detailTodoModal' value='"+da[i].sprint_back_log_no+"'>"+da[i].content+"</a></div>"
            	todoLine +=			"</div> </div> </div> </div>"
						} else if(da[i].status == 1){
							doingLine += "<div class='panel panel-gray DoingCard' id='"+da[i].sprint_back_log_no+"' draggable='true' ondragstart='drag(event)'>"
        			doingLine +=	  "<div class='panel-heading DoingCard'>"
          		doingLine +=			"<div class='row'>"
            	doingLine +=				"<div class='col-xs-6 text-left'>"
            	doingLine +=  				"<div class='content'>"
            	doingLine +=   				"<a class='fa fa-pencil ModifyDo' data-toggle='modal' data-target='#modifyTodoModal' value='"+da[i].sprint_back_log_no+"'></a>"
            	doingLine +=  				"</div> </div>"
            	doingLine +=					"<div class='col-xs-6 text-right'>"
            	doingLine +=  					"<div class='content'>"
            	doingLine +=    					"<a class='fa fa-trash-o delDo' value='"+da[i].sprint_back_log_no+"'></a>"
            	doingLine +=  					"</div> </div>"
            	doingLine +=					"<div class='col-xs-10 col-xs-offset-1 text-center'>"
            	doingLine +=  			"<div class='content'><a class='detailDo' data-toggle='modal' data-target='#detailTodoModal' value='"+da[i].sprint_back_log_no+"'>"+da[i].content+"</a></div>"
            	doingLine +=			"</div> </div> </div> </div>"
						} else if(da[i].status == 2){
							doneLine += "<div class='panel panel-gray DoneCard' id='"+da[i].sprint_back_log_no+"' draggable='true' ondragstart='drag(event)'>"
        			doneLine +=	  "<div class='panel-heading DoneCard'>"
          		doneLine +=			"<div class='row'>"
            	doneLine +=				"<div class='col-xs-6 text-left'>"
            	doneLine +=  				"<div class='content'>"
            	doneLine +=   				"<a class='fa fa-pencil ModifyDo' data-toggle='modal' data-target='#modifyTodoModal' value='"+da[i].sprint_back_log_no+"'></a>"
            	doneLine +=  				"</div> </div>"
            	doneLine +=					"<div class='col-xs-6 text-right'>"
            	doneLine +=  					"<div class='content'>"
            	doneLine +=    					"<a class='fa fa-trash-o delDo' value='"+da[i].sprint_back_log_no+"'></a>"
            	doneLine +=  					"</div> </div>"
            	doneLine +=					"<div class='col-xs-10 col-xs-offset-1 text-center'>"
            	doneLine +=  			"<div class='content'><a class='detailDo' data-toggle='modal' data-target='#detailTodoModal' value='"+da[i].sprint_back_log_no+"'>"+da[i].content+"</a></div>"
            	doneLine +=			"</div> </div> </div> </div>"
						}
						
					};
					
          $(todoLine).appendTo(ToDo);
          $(doingLine).appendTo(Doing);
          $(doneLine).appendTo(Done);
          ModifyDoLi();
				}	else {
					ToDo.html('');
					Doing.html('');
					Done.html('');
				};
				
          detailBtn();
          deleDo();
					
			});
			
			function allowDrop(ev) {
    		ev.preventDefault();
			}
			var drag_no = 0;
			function drag(ev) {
				drag_no = ev.target.id;
			}

			function drop(ev) {
    		ev.preventDefault();
				if(ev.target.id.length == 0){
					swal('빈 공간에 드래그를 해주세요');
				} else if(ev.target.id != 0 && ev.target.id != 1 && ev.target.id != 2){
    			swal('빈 공간에 드래그를 해주세요');
    		} else {
    			socket.emit('ThrowOut', {
						sprint_back_log_no : drag_no,
						status : ev.target.id,
						project_release_no : <%=project_release_no%>,
						loginId : <%=loginId%>
					});
    			todoLi();
    		}
    		
    		parent='';
    		drag_no = 0;
			}
			todoLi();
		//투두 등록--------------------------------------------
		//불러 온다 UserStory
		function DoStoryLi() {
			//var cookieName = '${cookie.name.value}';
			//cookieName = decodeURIComponent(cookieName);
			//var user = cookieName;
			$('.DoStory').html('');
			socket.emit('DoStory', {
				project_release_no : <%=project_release_no%>
			});
		};
			
		//불러서 넣는다 UserStory
		socket.on('DoStory', function (data){
		$('.DoStory').html('');
		var text = $('.DoStory');
		var line = '';
		//전체 조회 후 받은 데이터
		var da = data.data;
				
			if(da.length > 0){
				for(var i = 0; i < da.length; i++){
					line += "<option value='"+da[i].user_story_no+"'>"+da[i].title+"</option>"
				};
        $(line).appendTo(text);
			};
		});
			
		//불러 온다 유저
		function DoWorkerLi() {
			//var cookieName = '${cookie.name.value}';
			//cookieName = decodeURIComponent(cookieName);
			//var user = cookieName;
			$('.DoWorker').html('');
			socket.emit('DoUserList', {
				project_list_no : <%=project_list_no%>					
			});
		};
		
		//불러서 넣는다 유저
		socket.on('DoUserList', function (data){
			$('.DoWorker').html('');
			var text = $('.DoWorker');
			var line = '';
			//전체 조회 후 받은 데이터
			var list = data.list;
			var user = data.user;
			if(user.length > 0){
				for(var i = 0; i < user.length; i++){
					for(var j = 0; j < list.length; j++){
						if(user[i].user_no == list[j].user_no){
							line += "<option value='"+user[i].user_no+"'>"+list[j].name+"</option>"
						}
					}
				};
         $(line).appendTo(text);
			};
		});
		
		//등록 한다 Todo
		$('.DoAdd').on('click', function(){
			var story = $('.DoStory').val();
			var user_no = $('.DoWorker').val();
			var content = $('.registContent').val();
			
			if(content.trim().length > 0){
				socket.emit('DoAdd', {
					sprint_no : <%=Max%>,
					user_story_no : story,
					user_no : user_no,
					content : content,
					project_release_no : <%=project_release_no%>,
					loginId : <%=loginId%>
				});
				$(registTodoModal).modal('hide');
				$('.DoStory').val('');
				$('.DoWorker').val('');
				$('.registContent').val('');
				/** 태스크 새로고침 */
				todoLi();
			} else {
				swal('빈칸을 모두 채워주세요')
			}
		});
		$('.ToDoMaking').on('click', function(){
			DoStoryLi();
			DoWorkerLi();
		});
		//여기까지가 등록 --------------------------------------
		//투두 상세--------------------------------
		function detailBtn(){
		$('.detailDo').on('click', function(e){
			var push = $(this).attr('value');
			detailDoUserLi(push);
		});
		}
		function detailDoUserLi(push) {
			socket.emit('ToDoDetail', {
				sprint_back_log_no : push
			});
		};
			var Do_UserStory;
			var Do_Worker;
			socket.on('ToDoDetail', function (data){
				var da = data.data[0];
				Do_UserStory = da.user_story_no;
				Do_Worker = da.user_no;
				if(da.status == 0){
					$('.detailBackLogStatus').val('ToDo');
				} else if(da.status == 1){
					$('.detailBackLogStatus').val('Doing');
				} else if(da.status == 2){
					$('.detailBackLogStatus').val('Done');
				}
				$('.detailBackLogNo').val(da.sprint_back_log_no);
				$('.detailstatus').val(da.status);
				$('.detailDoContent').val(da.content);
				if(da.status != 2){
					$('.detailDate').hide();
						$('.detailDoDate').val('');
				} else {
					$('.detailDate').show();
					if(da.done_date != null){
						$('.detailDoDate').val(da.done_date.substr(0,10));
					}
				}
				DoDetail_UserStory();
				DoDetail_Worker();
				DoModify_Change();
		});
		
		//DoDetail_UserStory 불러오기
			function DoDetail_UserStory(){
				socket.emit('DoDetail_UserStory', {
					user_story_no : Do_UserStory
				});
				Do_UserStory = '';
			};
			//DoDetail_UserStory 명 부르기
			socket.on('DoDetail_UserStory', function (data) {
				var da = data.data[0];
				$('.detailDoUser').val(da.title);
			});
			
			//DoDetail_Worker 불러오기
			function DoDetail_Worker(){
				socket.emit('DoDetail_Worker', {
					user_no : Do_Worker
				});
				Do_Worker = '';
			};
			//DoDetail_Worker 명 부르기
			socket.on('DoDetail_Worker', function (data) {
				var da = data.data[0];
				$('.detailDoWorker').val(da.name);
			});	
			
			//버튼으로 단계 설정
			function DoModify_Change(){ 
				$('.ThrowOut').on('click', function(){
					if($('.detailstatus').val() != 2){
						if($('.detailstatus').val() == 0){
							var statusSet = 1;
						} else if($('.detailstatus').val()==1){
							var statusSet = 2;
						}
						socket.emit('ThrowOut', {
							sprint_back_log_no : $('.detailBackLogNo').val(),
							status : statusSet,
							project_release_no : <%=project_release_no%>,
							loginId : <%=loginId%>
						});
						$(detailTodoModal).modal('hide');
						/** 태스크 새로고침 */
						todoLi();
					} else {
						swal('마지막단계입니다.');
					};
				});
				
				$('.ThrowBack').on('click', function(){
					if($('.detailstatus').val() != 0){
						if($('.detailstatus').val() == 1){
							var statusSet = 0;
						} else if($('.detailstatus').val()==2){
							var statusSet = 1;
						}
						socket.emit('ThrowOut', {
							sprint_back_log_no : $('.detailBackLogNo').val(),
							status : statusSet,
							project_release_no : <%=project_release_no%>,
							loginId : <%=loginId%>
						});
						$(detailTodoModal).modal('hide');
						/** 태스크 새로고침 */
						todoLi();
					} else {
						swal('첫번째단계입니다.');
					};
				});
				
			};	
		
		//여기까지가 상세--------------------------------------
		//투두 수정--------------------------------
		function ModifyDoLi() {
				$('.ModifyDo').on('click', function(e){
					var push = $(this).attr('value');
					socket.emit('DoModifyStory', {
						project_release_no : <%=project_release_no%>
					});
					socket.emit('DoModifyLoad', {
						sprint_back_log_no : push
					});
					DoModify_Status();
					DoModify_Comp();
					DoModify_Worker();
				});
			};
		//Story 불러서 넣기
		socket.on('DoModifyStory', function (data){
			$('.DoModifyStory').html('');
			var text = $('.DoModifyStory');
			var line = '';
			//전체 조회 후 받은 데이터
			var da = data.data;
			if(da.length > 0){
				for(var i = 0; i < da.length; i++){
					line += "<option value='"+da[i].user_story_no+"'>"+da[i].title+"</option>"
				};
        $(line).appendTo(text);
			};
		});
		//DoModify_Worker 불러오기
		function DoModify_Worker(){
			socket.emit('DoModify_Worker', {
				project_list_no : <%=project_list_no%>
			});
		};
		//DoDetail_UserStory 명 부르기
		socket.on('DoModify_Worker', function (data) {
			$('#DoModifyWorker').html('');
			var text = $('#DoModifyWorker');
			var line = '';
			//전체 조회 후 받은 데이터
			var list = data.list;
			var user = data.user;
			if(user.length > 0){
				for(var i = 0; i < user.length; i++){
					for(var j = 0; j < list.length; j++){
						if(user[i].user_no == list[j].user_no){
							line += "<option value='"+user[i].user_no+"'>"+list[j].name+"</option>"
						}
						}
				};
				
         $(line).appendTo(text);
			};
		});
		//상태 부르기
		function DoModify_Status(){
			$('#DoStatus').html('');
			var text = $('#DoStatus');
			var line = '';
				
			for(var i = 0; i < 3; i++){
				if(i == 0){
					line += "<option value='"+i+"'>Todo</option>"
				} else if(i == 1){
					line += "<option value='"+i+"'>Doing</option>"
				}	else if(i == 2){
					line += "<option value='"+i+"'>Done</option>"
				}			
			}
			$(line).appendTo(text);
		};
			
		//Do 불러서 넣기
			socket.on('DoModifyLoad', function (data){
				var da = data.data[0];
				if(da.status == 0){
					$('.ModifyBackLogStatus').val('ToDo 수정');
				} else if(da.status == 1){
					$('.ModifyBackLogStatus').val('Doing 수정');
				} else if(da.status == 2){
					$('.ModifyBackLogStatus').val('Done 수정');
				}
				$('#sprint_no').val(da.sprint_back_log_no);
				$('.DoModifyStory').val(da.user_story_no);
				$('#DoContent').val(da.content);
				$('#DoStatus').val(da.status);
				$('#DoModifyWorker').val(da.user_no);
			});
		
		//수정	
		function DoModify_Comp(){ 
		$('.DoModifyComp').on('click', function(){
			var content = $('#DoContent').val();
			if(content.trim().length > 0){
				socket.emit('DoModify', {
					sprint_back_log_no : $('#sprint_no').val(),
					user_story_no : $('#DoModifyStory').val(),
					user_no : $('#DoModifyWorker').val(),
					content : content,
					status : $('#DoStatus').val(),
					project_release_no : <%=project_release_no%>,
					loginId : <%=loginId%>
				});
				$(modifyTodoModal).modal('hide');
				$('#sprint_no').val('');
				$('#DoModifyStory').val('');
				$('#DoModifyWorker').val('');
				$('#DoStatus').val('');
				/** 태스크 새로고침 */
				todoLi();
			} else {
				swal('공백을 채워주세요.');
			}
		});
		}
		//여기까지가 수정----------------------------------
		//투두 삭제--------------------------------
		function deleDo() {
			$('.delDo').on('click',	function(e) {
				e.preventDefault();
					var push = $(this).attr('value');
				swal({
		  title: '삭제하시겠습니까?',
		  type: 'warning',
		  showCancelButton: true,
		  confirmButtonColor: '#3085d6',
		  cancelButtonColor: '#d33',
		  confirmButtonText: '확인',
		  cancelButtonText: '취소'
		}).then(function () {
				
					socket.emit('DoDelete', {
						sprint_back_log_no : push,
						project_release_no : <%=project_release_no%>,
						loginId : <%=loginId%>
					});
				
					/** 모든곳에 새로고침을 달아야함 추가 / 수정 / 삭제 */
					$('.HereToToDo').html('');
						todoLi();
				push = 0;
					});
				});
			};
		//여기까지가 삭제------------------------------------
		//설정한다 초기세팅